---
title: "Relative ideal"
format: html
engine: markdown
---

## Definition

Let $S$ be a [numerical semigroup](../Basic-concepts/Numerical-semigroup.qmd). A subset $E$ of $\mathbb{Z}$ is a relative ideal of $S$ if $S + E = \{s + e ~ | ~ s \in S, e \in E \} \subseteq E$ and there exists $s \in S$ such that $s + E = \{s + e ~ | ~ e \in E \}\subseteq S$.

Two relative ideals $E$ and $H$ are said to be equivalent if there exists $x \in \mathbb{Z}$ such that $E = x + H = \{x + h ~ | ~ h \in H \}$. As a consequence, every relative ideal is equivalent to some [proper ideal](Proper-ideal.qmd).

It is said that a subset $I = \{e_1, \ldots, e_h\} \subseteq E$ is a system of generators of $E$ if $E = I + S$. It can be proven that for every relative ideal $E$ of $S$ there exists a unique minimal set of generators, which is $A = E \setminus (M + E)$, where $M = S \setminus \{0\}$ is the [maximal ideal](Maximal-ideal) of $S$.

## Examples

$\circ$ Let $S = \langle 3, 8, 10 \rangle = \{0, 3, 6, 8, \rightarrow \}$ and $E = \langle 3 \rangle$ the monoid generated by $A = \{3\}$ in $\mathbb{N}$. $E$ is not a relative ideal since $S + E \subsetneq E$, for example $3 + 8 = 11 \not \in E$ but $3 \in E$ and $8 \in S$.

$\circ$ Let $S$ a numerical semigroup, $k \in \mathbb{N} \setminus \{0\}$ and $I = \{i_1, i_2, \ldots, i_k\}$ a subset of $\mathbb{Z}$ arbitrary but fixed. Then, the set $E = I + S$ is a relative ideal of $S$. The first condition is satisfied because $S$ is a numerical semigroup. moreover, if we take $w = \min \{0, i_1, i_2, \ldots, i_k\}$, defining $s = C(S) - w$, where $C(S)$ denotes the [conductor](../Basic-concepts/Conductor.qmd) of $S$, we have that $s \in S$ and $s + E \subseteq S$. In conclusion, $E$ is a relative ideal.

## Examples with GAP

The following examples are made with the package NumericalSgps in GAP.

$\diamond$ Let $S$ a numerical semigroup and $I$ a list of integers. As we know, the subset $E = I + S$ is a relative ideal of $S$, the function `IdealOfNumericalSemigroup` returns the ideal generated by $I$ and $S$.

``` gap
gap> S := NumericalSemigroup(12,17,20);
<Numerical semigroup with 3 generators>
gap> I := [-5, -4, 13];
[ -5, -4, 13 ]
gap> IS := IdealOfNumericalSemigroup(I,S);
<Ideal of numerical semigroup>
```

It is also possible to generate it with the + operator.

``` gap
gap> J := I + S;
<Ideal of numerical semigroup>
gap> J = IS;
true
```

In the case where we have an ideal $I$, the function `IsIdealOfNumericalSemigroup` checks whether is a relative ideal of a numerical semigroup or not.

``` gap
gap> T := [1..5] + NumericalSemigroup(3,8);
<Ideal of numerical semigroup>
gap> IsIdealOfNumericalSemigroup(T);
true
```

On the other hand, if $I$ is a relative ideal for some numerical semigroup $S$, the function `AmbientNumericalSemigroupOfIdeal` returns the numerical semigroup.

``` gap
gap> T := AmbientNumericalSemigroupOfIdeal(IS);
<Numerical semigroup with 3 generators>
gap> S = T;
true
```

$\diamond$ Given an ideal $IS$, the functions `MinimalGenerators`, `MinimalGeneratingSystem` and `MinimalGeneratingSystemOfIdealOfNumericalSemigroup` return the minimal system of generators of $IS$.

``` gap
gap> S := NumericalSemigroup(6, 14, 22, 37, 53);
<Numerical semigroup with 5 generators>
gap> IS := [-7, -3, -1, 4, 12, 22]+S;
<Ideal of numerical semigroup>
gap> MinimalGenerators(IS);
[ -7, -3, 4, 12 ]
gap> MinimalGenerators(IS) = MinimalGeneratingSystem(IS);
true
gap> MinimalGenerators(IS) = MinimalGeneratingSystemOfNumericalSemigroup(IS);
true
```

On the other hand, the functions `Generators` and `GeneratorsOfIdealOfNumericalSemigroup` return a system of generators of a relative ideal. It may not be minimal.

``` gap
gap> Generators(IS);
[ -7, -3, -1, 4, 12, 22 ]
gap> Generators(IS) = GeneratorsOfIdealOfNumericalSemigroup(IS);
true
```

$\diamond$ Given a relative ideal $IS$ and an integer $n$, the function `BelongsToIdealOfNumericalSemigroup` returns true or false depending on whether $n \in IS$ or not. The expression $n ~~ in ~~ IS$ can also be used.

``` gap
gap> S := NumericalSemigroup(7, 41, 79, 113, 150);
<Numerical semigroup with 5 generators>
gap> IS := [-40, -21, -10, 2, 3] + S;
<Ideal of numerical semigroup>
gap> BelongsToIdealOfNumericalSemigroup(114, IS);
true
gap> 114 in IS;
true
```

Given a relative ideal $IS$ and a positive integer $r$, the function `ElementNumber_IdealOfNumericalSemigroup` returns the $r-$th element in $IS$. The expression $IS[r]$ can also be used.

``` gap
gap> ElementNumber_IdealOfNumericalSemigroup(IS, 35);
29
gap> IS[35];
29
```

If we have a list of positive integers $L$, the expression $IS\{L\}$ returns the list $[IS[k] ~ | ~ k \in L]$.

``` gap
gap> IS{[2, 5, 41, 152]};
[ -33, -19, 36, 150 ]
```

Conversely, if $IS$ is a relative ideal and $r$ an integer, the function `NumberElement_IdealOfNumericalSemigroup` returns the position of $r$ in $IS$. Returns `fail` if $r \not \in IS$.

``` gap
gap> NumberElement_IdealOfNumericalSemigroup(IS, 114);
116
gap> NumberElement_IdealOfNumericalSemigroup(IS, -4);
fail
```

## References
